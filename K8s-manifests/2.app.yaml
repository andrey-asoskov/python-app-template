---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-params
  labels:
    app: app
data:
  DB_HOST: db
  DB_PORT: '3306'
  DB_NAME: db1
---
apiVersion: v1
kind: Secret
metadata:
  name: app-creds
  labels:
    app: app
stringData:
  mysql-user-name: dbuser
  mysql-user-password: NY#xU8qfXM
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  labels:
    app: app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
      annotations:
        container.apparmor.security.beta.kubernetes.io/app: localhost/cri-containerd.apparmor.d
    spec:
      automountServiceAccountToken: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        runAsGroup: 10001
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: app
          image: andreyasoskovwork/cat-app:0.1.15
          imagePullPolicy: Always
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          ports:
            - name: app
              containerPort: 3000
              protocol: TCP
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          startupProbe:
            httpGet:
              path: /health
              port: 3000
            failureThreshold: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 5
            failureThreshold: 1
            periodSeconds: 3
            timeoutSeconds: 3
          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 5
            failureThreshold: 1
            periodSeconds: 3
            timeoutSeconds: 3
          envFrom:
            - configMapRef:
                name: app-params
          lifecycle:
            preStop:
              httpGet:
                path: crash
                port: 3000
                scheme: HTTP
          volumeMounts:
            - name: app-tmp
              mountPath: /tmp
            - name: app-creds
              mountPath: "/run/secrets"
              readOnly: true
      volumes:
        - name: app-tmp
          emptyDir: {}
        - name: app-creds
          secret:
            secretName: app-creds
      terminationGracePeriodSeconds: 3
---
apiVersion: v1
kind: Service
metadata:
  name: app
  labels:
    app: app
spec:
  ports:
    - name: app
      port: 3000
      protocol: TCP
      targetPort: 3000
  selector:
    app: app
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app
spec:
  rules:
    - host: www.example.com
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: app
                port:
                  number: 3000
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  generation: 1
  labels:
    app: app
  name: app
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: app
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: app
spec:
  maxReplicas: 5
  minReplicas: 2
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: app
  targetCPUUtilizationPercentage: 70
