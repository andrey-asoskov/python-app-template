---
name: Helm
on:
  pull_request:
    branches:
      - '**'
    types:
      - opened
      - edited
      - reopened
    paths:
      - .github/workflows/Helm.yml
      - Helm/**
  push:
    branches:
      - "**"
    paths:
      - .github/workflows/Helm.yml
      - Helm/**

jobs:
  helm-test:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: azure/setup-kubectl@v3
        with:
          version: 'v1.25.2'  # default is latest stable
      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.4.0
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.10.0
      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.3.1
      - name: helm-validate
        run: |

          ct lint --config ./Helm/ct-lint.yaml \
          --charts ./Helm/charts/app
          helm lint ./Helm/charts/app
          helm template app \
          ./Helm/charts/app --values ./Helm/app_values.yaml \
          --validate

          helm install app \
          ./Helm/charts/app --values ./Helm/app_values.yaml \
          --dry-run

      - name: helm-deploy-db
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami

          helm template --namespace helm-charts db \
          bitnami/mariadb --version 11.3.3 --values ./Helm/mariadb_values.yaml \
          --validate

          helm install --namespace helm-charts db \
          bitnami/mariadb --version 11.3.3 --values ./Helm/mariadb_values.yaml \
          --dry-run

          helm install --create-namespace --namespace helm-charts db \
          bitnami/mariadb --version 11.3.3 --values ./Helm/mariadb_values.yaml \
          --wait
          sleep 180

      - name: helm-deploy-app
        run: |
          kubectl -n helm-charts get pods
          helm install --create-namespace --namespace helm-charts app \
          ./Helm/charts/app --values ./Helm/app_values.yaml \
          --wait
          # sleep 180
          helm list --namespace helm-charts
          kubectl -n helm-charts get pods

      # # Doesn't create a release
      # - name: helm-deploy-app
      #   uses: azure/k8s-bake@v2.2
      #   with:
      #     renderEngine: 'helm'
      #     helmChart: './Helm/charts/app'
      #     overrideFiles: './Helm/app_values.yaml'
      #     helm-version: 'latest'
      #     silent: 'false'

      # - name: k8s-test
      #   id: k8s-test
      #   run: |
      #     set -x

      #     sleep 10

      #     helm list
      #     kubectl get pod
      #     helm test app || true
      #     kubectl describe pod app-test-app
      #     kubectl logs app-test-app
      #     kubectl get pod

      #     kubectl get pod | grep test | grep Completed
      #     if [ "$?" = "0" ]; then
      #       echo "Test OK"
      #       exit 0
      #     else
      #       echo "Test failed"
      #       exit 1
      #     fi

  helm-package:
    runs-on: ubuntu-22.04
    needs: helm-test
    steps:
      - uses: actions/checkout@v3
      - name: Get short-sha
        id: short-sha
        run: |
          SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-7`
          echo "short_sha=${SHORT_SHA}" >> $GITHUB_ENV
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.10.0
      - name: Helm Package
        run: helm package ./Helm/charts/app/ -d ./docs/Package
      - uses: actions/upload-artifact@main
        with:
          name: "helm-chart-${{ env.short_sha }}.tgz"
          path: docs/Package
          retention-days: 5


  # release:
  #   # depending on default permission settings for your org (contents being read-only or read-write for workloads), you will have to add permissions
  #   # see: https://docs.github.com/en/actions/security-guides/automatic-token-authentication#modifying-the-permissions-for-the-github_token
  #   permissions:
  #     contents: write
  #   runs-on: ubuntu-22.04
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0

  #     - name: Configure Git
  #       run: |
  #         git config user.name "$GITHUB_ACTOR"
  #         git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

  #     - name: Install Helm
  #       uses: azure/setup-helm@v3
  #       with:
  #         version: v3.10.0

  #     - name: Run chart-releaser
  #       uses: helm/chart-releaser-action@v1.4.1
  #       env:
  #         CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
  #       with:
  #         charts_dir: Helm
